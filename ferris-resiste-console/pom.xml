<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.ferris</groupId>
        <artifactId>ferris-resiste</artifactId>
        <version>1.2.0.2-SNAPSHOT</version>
    </parent>
    
    <!--
     | Project info
     | Site - Project Information - Summary
    -->
    <artifactId>ferris-resiste-console</artifactId>
    <packaging>jar</packaging>
    <name>ferris-resiste-console</name>    
    <description>A 100% pure Java stand-alone and self-contained RSS-to-email application (it even comes with its own JRE).</description>

    <!--
     | Project properties
    -->
    <properties>
        <!-- Don't use the "." character for the property names. The site plugin
        cannot handle user-defined property names that contain "." -->
        <ferrisJacocoVersion>0.8.6</ferrisJacocoVersion>
        <ferrisWindowsAssemblyId>windows-x86-64-jre</ferrisWindowsAssemblyId>
        <ferrisWindowsJavaDownloadVersion>zulu11.45.27-ca-jdk11.0.10-win_x64</ferrisWindowsJavaDownloadVersion>
        <ferrisWindowsJavaDownloadFile>${ferrisWindowsJavaDownloadVersion}.zip</ferrisWindowsJavaDownloadFile>
        <ferrisWindowsJavaDownloadUrl>https://cdn.azul.com/zulu/bin/${ferrisWindowsJavaDownloadFile}</ferrisWindowsJavaDownloadUrl>
        
        <ferrisLinuxAssemblyId>linux-x86-64-jre</ferrisLinuxAssemblyId>
        <ferrisLinuxJavaDownloadVersion>zulu11.45.27-ca-jdk11.0.10-linux_x64</ferrisLinuxJavaDownloadVersion>
        <ferrisLinuxJavaDownloadFile>${ferrisLinuxJavaDownloadVersion}.zip</ferrisLinuxJavaDownloadFile>
        <ferrisLinuxJavaDownloadUrl>https://cdn.azul.com/zulu/bin/${ferrisLinuxJavaDownloadFile}</ferrisLinuxJavaDownloadUrl>                     
    </properties>

    <!--
     | For multi-module site generation, this
     | URL needs to be set to a "parent"/"module" value.
    -->
    <url>https://${ferrisUrlHostName}/${project.parent.artifactId}/${project.artifactId}/</url>

    <!--
     | For multi-module site generation, this URL needs 
     | to be set to the "parent"/"module" directory of the URL
    -->
    <distributionManagement>
        <site>
            <id>github.gh-pages</id>
            <url>${project.url}</url>
        </site>
    </distributionManagement>      
    
    <!--
     | Configure dependency management
    -->
    <dependencyManagement>
        <dependencies>
            <!--
             | This refers to the Windows specific JAR file created
             | during the packaging phase.  The assembly needs this
             | dependency defined so it can find the JAR file.
            -->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>${project.artifactId}</artifactId>
                <version>${project.version}</version>
                <classifier>windows</classifier>
            </dependency>
            
            <!--
             | This refers to the Linux specific JAR file created
             | during the packaging phase.  The assembly needs this
             | dependency defined so it can find the JAR file.
            -->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>${project.artifactId}</artifactId>
                <version>${project.version}</version>
                <classifier>linux</classifier>
            </dependency>
        </dependencies>
    </dependencyManagement>
	
    <!--
     | Configure build options
    -->
    <build>
        <!--
         | Configure resources
        -->
        <resources>
            <!--
             | Include everything in resources and don't filter
            -->
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
        
        <!--
         | Configure plugins to customize build
        -->
        <plugins>
            <!--
             | Use this plugin to check code against
             | unit test coverage requriements. 
            -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${ferrisJacocoVersion}</version>
                <executions>
                    <!--
                     | Prepare Jacoco for running
                    -->
                    <execution>
                        <id>default-prepare-agent</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    
                    <!--
                     | Run Jacoco and check code against unit test coverage requirements
                    -->
                    <execution>
                        <id>default-check</id>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule implementation="org.jacoco.maven.RuleConfiguration">
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.0</minimum>
                                        </limit>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.0</minimum>
                                        </limit>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>CLASS</counter>
                                            <value>MISSEDCOUNT</value>
                                            <maximum>10000</maximum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
                    
            <!--
             | Configure how the JAR file(s) are built
             | - Need a Windows-specific JAR
             | - Need a Linux-specific JAR
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <!--
                     | Don't create the default JAR for the project
                     | since I need to create two other JAR files
                     | which are specific to Windows and Linux
                    -->
                    <execution>
                        <id>default-jar</id>
                        <phase />
                    </execution>
                    <!--
                     | Windows specific JAR
                     | - Path to ..\conf\
                    -->
                    <execution>
                        <id>windows-jar-execution</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>windows</classifier>
                            <archive>
                                <manifestEntries>
                                    <Class-Path>..\conf\</Class-Path>    
                                    <Implementation-URL>${project.parent.scm.url}</Implementation-URL>
                                </manifestEntries>
                                <addMavenDescriptor>false</addMavenDescriptor>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <mainClass>org.ferris.resiste.console.main.Main</mainClass>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>                                    
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                    <!--
                     | Linux specific JAR
                     | - Path to ../conf/
                    -->
                    <execution>
                        <id>linux-jar-execution</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>linux</classifier>
                            <archive>
                                <manifestEntries>
                                    <Class-Path>../conf/</Class-Path>
                                    <Implementation-URL>${project.parent.scm.url}</Implementation-URL>
                                </manifestEntries>
                                <addMavenDescriptor>false</addMavenDescriptor>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <mainClass>org.ferris.resiste.console.main.Main</mainClass>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>                
            </plugin>
        </plugins>
    </build>
    
    <!--
     | Configure dependency options
    -->
    <dependencies>
        <!-- TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST -->
        <!-- TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST TEST -->
        <!-- 
         | JUNIT 
        -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <!-- 
         | MOCKITO 
        -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.26.0</version>
            <scope>test</scope>
        </dependency>

        <!-- COMPILE COMPILE COMPILE COMPILE COMPILE COMPILE COMPILE COMPILE COMPILE COMPILE COMPILE COMPILE -->
        <!-- COMPILE COMPILE COMPILE COMPILE COMPILE COMPILE COMPILE COMPILE COMPILE COMPILE COMPILE COMPILE -->
        <!-- 
         | UTILITIES 
        -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>
        
        <!-- 
         | ROME
        -->
        <dependency>
            <groupId>com.rometools</groupId>
            <artifactId>rome</artifactId>
            <version>1.9.0</version>
        </dependency>
        
        <!-- 
         | MAIL 
        -->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.7</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.sun.activation</groupId>
            <artifactId>javax.activation</artifactId>
            <version>1.2.0</version>
        </dependency>
        
        <!-- 
         | CDI 
        -->
        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
            <version>3.0.3.Final</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.spec.javax.interceptor</groupId>
                    <artifactId>jboss-interceptors-api_1.2_spec</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.spec.javax.el</groupId>
                    <artifactId>jboss-el-api_3.0_spec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>javax.interceptor</groupId>
            <artifactId>javax.interceptor-api</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- 
         | VALIDATION
        -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.1.0.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.1.2.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator-cdi</artifactId>
            <version>5.1.2.Final</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml</groupId>
            <artifactId>classmate</artifactId>
            <version>1.1.0</version>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>3.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>javax.el</artifactId>
            <version>2.2.6</version>
        </dependency>
        
        <!-- 
         | FREEMARKER
        -->  
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.23</version>
        </dependency>
        
        <!--
         | DERBY
        -->
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.15.2.0</version>
        </dependency> 
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyclient</artifactId>
            <version>10.15.2.0</version>
        </dependency>
        
        <!--
         | Java 11 Runtime (Java EE)
        -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>
       
    </dependencies>
    
    <!--
     | Configure profile options
    -->
    <profiles>
        <profile>
            <id>assembly-zip</id>
            <build>
                <plugins>
                    <!--
                     | Download Java 11. It contains files too big to commit to GitHub so it can't be embedded in the project
                    -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>download-java11-binaries-and-unzip</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <mkdir dir="download" />
                                        <get 
                                            skipexisting="true" 
                                            src="${ferrisWindowsJavaDownloadUrl}" 
                                            dest="download"
                                        />
                                        <unzip
                                            overwrite="false"
                                            src="download/${ferrisWindowsJavaDownloadFile}"
                                            dest="download"
                                        />
                                        <get 
                                            skipexisting="true" 
                                            src="${ferrisLinuxJavaDownloadUrl}" 
                                            dest="download"
                                        />
                                        <unzip
                                            overwrite="false"
                                            src="download/${ferrisLinuxJavaDownloadFile}"
                                            dest="download"
                                        />
                                    </target>
                                </configuration>                                
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>windows-jre-assembly</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptors>
                                        <descriptor>src/main/assemblies/windows/windows-jre-assembly.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>
                            <execution>
                                <id>linux-jre-assembly</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <tarLongFileMode>gnu</tarLongFileMode>
                                    <descriptors>
                                        <descriptor>src/main/assemblies/linux/linux-jre-assembly.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>assembly-unzip</id>
            <build>
                <plugins>                    
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unzip-windows-assembly-and-copy-emailproperties</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <unzip src="${project.build.directory}/${project.artifactId}-${project.version}-${ferrisWindowsAssemblyId}.zip" dest="${project.build.directory}/unziped" />
                                        <copy 
                                            file="D:\Documents\Development\Resources\ferris-resiste\conf\email.properties"
                                            todir="${project.build.directory}/unziped/${project.artifactId}-${project.version}-${ferrisWindowsAssemblyId}/conf"
                                        />
                                    </target>
                                </configuration>                                
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
    <!--
     | Configure reporting options
    -->
    <reporting>
        <plugins>
            <!--    
              | Use this plugin to include the Jacoco unit test coverage report
              |
              | NOTE: Code coverage statistics needs to be generated
              |       first otherwise this plugin produces no report.
              |       Configure this plugin in <build><plugins> to
              |       generate the statistics.
            -->               
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${ferrisJacocoVersion}</version> 
                <configuration>
                    <goals>
                        <goal>report</goal>
                    </goals>   
                </configuration>                                                   
            </plugin>
                    
            <!--
              | Use this plugin to set what reports are
              | visible under "Project Information" 
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <configuration>
                    <webAccessUrl>
                        ${ferrisWebAccessUrl}
                    </webAccessUrl>
                </configuration>                
                <reportSets>
                    <reportSet>
                        <id>Report Set 1</id>
                        <reports>
                            <report>summary</report>                                    
                            <report>team</report>
                            <report>scm</report>
                            <report>issue-management</report>
                            <report>licenses</report>
                            <report>dependencies</report>
                            <report>dependency-management</report>
                            <report>plugins</report>
                            <report>plugin-management</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin> 
        </plugins>
    </reporting>
</project>
